@model Vault.Models.CredentialViewModel

@using (Html.BeginForm("Update", "Main", FormMethod.Post, new { id = "credential-form", @class = "form-horizontal", autocomplete = "off" })) {
    
    <p>Enter the details below:</p>

    <!-- These fake fields are a workaround for Chrome not respecting the autocomplete attribute and autofilling fields with the wrong values... -->
    <input class="chrome-autocomplete-fake" type="text" name="chromeusername" />
    <input class="chrome-autocomplete-fake" type="password" name="chromepassword" />

    <div class="form-group">
        @Html.LabelFor(x => x.Description, new { @class = "col-sm-4 control-label" })
        <div class="col-sm-8">
            @Html.TextBoxFor(x => x.Description, new { @class = "form-control", autocomplete = "vault-desc" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.Username, new { @class = "col-sm-4 control-label" })
        <div class="col-sm-8">
            @Html.TextBoxFor(x => x.Username, new { @class = "form-control", autocomplete = "vault-un" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.Password, new { @class = "col-sm-4 control-label" })
        <div class="col-sm-5">
            @Html.TextBoxFor(x => x.Password, new { @class = "form-control", autocomplete = "vault-pw" })
            <div class="password-strength"><span></span><div></div></div>
        </div>
        <div class="col-sm-3">
            <button class="btn btn-default generate-password" tabindex="-1">Generate</button>
            <a href="#" class="generate-password-options-toggle" tabindex="-1">Options</a>
        </div>
    </div>
    <div class="form-group generate-password-options">
        <div class="col-sm-8 col-sm-push-4">
            <div class="checkbox">
                <label><input type="checkbox" class="generate-password-option" id="ucase" name="ucase" value="1" checked="checked" /> Upper</label> &nbsp;
                <label><input type="checkbox" class="generate-password-option" id="lcase" name="lcase" value="1" checked="checked" /> Lower</label> &nbsp;
                <label><input type="checkbox" class="generate-password-option" id="nums" name="nums" value="1" checked="checked" /> Numbers</label> &nbsp;
                <label><input type="checkbox" class="generate-password-option" id="symb" name="symb" value="1" checked="checked" /> Symbols</label>
            </div>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.PasswordConfirmation, new { @class = "col-sm-4 control-label" })
        <div class="col-sm-5">
            @Html.TextBoxFor(x => x.PasswordConfirmation, new { @class = "form-control", autocomplete = "vault-pw-confirm" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.Url, new { @class = "col-sm-4 control-label" })
        <div class="col-sm-8">
            @Html.TextBoxFor(x => x.Url, new { @class = "form-control", autocomplete = "vault-url" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.UserDefined1Label, new { @class = "col-sm-4 control-label" })
        <div class="col-sm-8">
            @Html.TextBoxFor(x => x.UserDefined1Label, new { @class = "form-control", autocomplete = "vault-ul1" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.UserDefined1, new { @class = "col-sm-4 control-label" })
        <div class="col-sm-8">
            @Html.TextBoxFor(x => x.UserDefined1, new { @class = "form-control", autocomplete = "vault-ud1" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.UserDefined2Label, new { @class = "col-sm-4 control-label" })
        <div class="col-sm-8">
            @Html.TextBoxFor(x => x.UserDefined2Label, new { @class = "form-control", autocomplete = "vault-ul2" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.UserDefined2, new { @class = "col-sm-4 control-label" })
        <div class="col-sm-8">
            @Html.TextBoxFor(x => x.UserDefined2, new { @class = "form-control", autocomplete = "vault-ud2" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.Notes, new { @class = "col-sm-4 control-label" })
        <div class="col-sm-8">
            @Html.TextAreaFor(x => x.Notes, new { @class = "form-control", rows = "6" })
        </div>
    </div>

    @Html.HiddenFor(x => x.CredentialID)
    @Html.HiddenFor(x => x.UserID)
                
}

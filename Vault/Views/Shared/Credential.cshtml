@model Vault.Models.CredentialViewModel

<div id="credential-form-dialog" class="modal">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            @using (Html.BeginForm("Update", "Main", FormMethod.Post, new { id = "credential-form", autocomplete = "off" })) {
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title">Edit Credential</h4>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    @Html.LabelFor(x => x.Description)
                    @Html.TextBoxFor(x => x.Description, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.Username)
                    @Html.TextBoxFor(x => x.Username, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.Password)
                    @Html.PasswordFor(x => x.Password, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.PasswordConfirmation)
                    @Html.PasswordFor(x => x.PasswordConfirmation, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.Url)
                    @Html.TextBoxFor(x => x.Url, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.UserDefined1Label)
                    @Html.TextBoxFor(x => x.UserDefined1Label, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.UserDefined1)
                    @Html.TextBoxFor(x => x.UserDefined1, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.UserDefined2Label)
                    @Html.TextBoxFor(x => x.UserDefined2Label, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.UserDefined2)
                    @Html.TextBoxFor(x => x.UserDefined2, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.Notes)
                    @Html.TextAreaFor(x => x.Notes, new { @class = "form-control" })
                </div>
            </div>
            <div class="modal-footer">
                @Html.HiddenFor(x => x.CredentialID)
                @Html.HiddenFor(x => x.UserID)
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="submit" class="btn btn-primary">Save</button>
            </div>
            }
        </div>
    </div>
</div>
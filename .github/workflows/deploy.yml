name: Deploy

on:
  push:
    tags: [ "release-*" ]

jobs:
  build:
    name: Publish
    runs-on: ubuntu-latest
    env:
      DOTNET_PROJECT_FOLDER: ${{ github.workspace }}/Vault
      DATABASE_RELEASE_FOLDER: ${{ github.workspace }}/db/releases
      PUBLISH_OUTPUT_FOLDER: ${{ github.workspace }}/publish-output
    defaults:
      run:
        working-directory: ${{ env.DOTNET_PROJECT_FOLDER }}
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11

      - name: Restore NuGet dependencies
        run: dotnet restore

      - name: Restore NPM dependencies
        run: npm ci

      - name: Build UI
        run: ./build-front-end.sh

      - name: Publish application
        run: dotnet publish --configuration Release --output ${{ env.PUBLISH_OUTPUT_FOLDER }}

      - name: Upload build artifact
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3
        with:
            name: vault-app
            path: ${{ env.PUBLISH_OUTPUT_FOLDER }}

      - name: Upload database release artifact
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3
        with:
            name: vault-db
            path: ${{ env.DATABASE_RELEASE_FOLDER }}

  deploy:
    name: Deploy
    needs: build
    runs-on: [self-hosted, web-vm]
    environment: production
    steps:
      - name: Clean work folder
        run: rm -rf ${{ github.workspace }}/*

      - name: Download artifacts
        uses: actions/download-artifact@eaceaf801fd36c7dee90939fad912460b18a1ffe

      - name: Apply database release scripts
        run: ~/dbup-cli/dbup ${{ github.workspace }}/vault-db "${{ secrets.CONNECTION_STRING_DEPLOY }}"

      - name: Copy files
        run: sudo cp -a ${{ github.workspace }}/vault-app/* /var/www/vault

      - name: Restart service
        run: sudo systemctl restart vault.service
